# This workflow will build a Springboot project into docker image, and then push to docker hub. Eventually, access to VM, pull latest image and run container
name: Build and Deploy

on:
  workflow_dispatch:  # manuaaly

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        sudo docker build -t ${{ secrets.DOCKER_USERNAME }}/capstone-backend-server:latest .
        sudo docker push ${{ secrets.DOCKER_USERNAME }}/capstone-backend-server:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Install SSH client
      run: sudo apt-get install -y sshpass

    - name: Deploy to Azure VM
      run: |
        sshpass -p "${{ secrets.AZURE_VM_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_IP }} << EOF
        sudo docker pull ${{ secrets.DOCKER_USERNAME }}/capstone-backend-server:latest
        sudo docker run -d --name your-container-name -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/capstone-backend-server:latest
        EOF
      env:
        AZURE_VM_PASSWORD: ${{ secrets.AZURE_VM_PASSWORD }}
        AZURE_VM_USERNAME: ${{ secrets.AZURE_VM_USERNAME }}
        AZURE_VM_IP: ${{ secrets.AZURE_VM_IP }}
